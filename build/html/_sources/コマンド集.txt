=========================
コマンド集
=========================

はじめに
==========
| 本ドキュメントはLinuxで使用されるコマンドについて纏めたものとなります。
| コマンドの詳細について知りたい方は各自調べて下さい。
| また、コマンドを使用したことによっていかなる事象が発生しても責任は負いかねます。

コマンド集
==================

vimコマンド
--------------

| ``gg``
| ``shift+g``
| ``[n]x``
| ``[n]yy``
| ``dd``
| ``dw``
| ``de``
| ``:%s/old/new/gc``
| ``Ctrl+g``
| ``u``
| ``:set nu``
| ``:set nonu``
| ``:set showmode``
| ``:set showmatch``
| ``:set ignorecase``
| ``:set autoindent``
| ``:set noautoindent``
| ``:set all``

単語ごとに移動
``w``

単語ごとにバック移動
``b``
行末に移動
``0``
行頭に移動
``$``

Centosプロキシ設定
--------------------

1./etc/profile を開く

vi /etc/profile

2.以下の行を追記
| PROXY='user-proxy.put:8080' # proxyサーバのドメインとポートを指定
| export http_proxy=$PROXY
| export HTTP_PROXY=$PROXY
| export https_proxy=$PROXY
| export HTTPS_PROXY=$PROXY
| 

3.ファイルを保存し以下を実行して設定を反映

source /etc/profile

Centos日本語キーボード設定
----------------------------

1.キーボード確認

``cat /etc/sysconfig/keyboard``

2.設定ファイル編集

``vim /etc/sysconfig/keyboard`` ::

    KEYTABLE="jp106"
    MODEL="jp106"
    LAYOUT="jp"
    KEYBOARDTYPE="pc"

ユーザー一覧確認
----------------------


``cat /etc/passwd``

ログインしているユーザーの確認
--------------------------------------------


``w``

指定した時間、シェルを停止、処理を遅延
--------------------------------------------

``sleep 10``

テンポラリファイル、ディレクトリの作成
--------------------------------------------

``mktemp``

``mktemp -d``

コマンドの実行時間の計測
--------------------------------------------

time [コマンド]

アーカイブファイルの解答
--------------------------------------------

tar -xvzf apr-1.5.1.tar.gz

develファイルの意味
--------------------------------------------

developmentの略、主に開発に関連したものが入っているパッケージ。
開発用のツールだったり、コンポーネントだったり。
動的な仕組み（機能がモジュール化されているもの）を使うソフトウェアの場合は、通常の使用でも必要になることもある

リモート(遠隔)でdiff取得
--------------------------------------------

ssh root@stg-gbs-lb1-2.put "cat /usr/local/nginx1.9.4/conf/conf.d/gbs-dr-api_80.conf" | diff - /usr/local/nginx1.9.4/conf/conf.d/gbs-dr-api_80.conf
ssh root@prd-gbs-bat1-1.put "cat /root/.swatchdogrc_gbs_archive_to_k2" | diff - /root/.swatchdogrc_gbs_archive_to_k2
ssh root@prd-gbs-bat1-1.put "cat /root/scripts/make_to_monitor_ln_log.sh" | diff - /root/scripts/make_to_monitor_ln_log.sh
ssh root@prd-gbs-bat1-1.put "cat /root/scripts/conf/swatch2applog.conf" | diff - /root/scripts/conf/swatch2applog.conf
ssh root@prd-gbs-bat1-1.put "cat /root/scripts/swatchmail.sh" | diff - /root/scripts/swatchmail.sh

ttyデバイス確認、シリアル接続
--------------------------------------------

ls -l /dev/tty.*
cu l /dev/tty.usbmodem1421
screen /dev/tty.usbmodem1421

SSH鍵認証設定　※SSHでノンパスログインをする際は認証鍵リストに公開鍵を記載する！
----------------------------------------------------------------------------------------

・鍵作成
ssh-keygen
・SSH認証鍵リスト
/root/.ssh/authorized_keys
・SSH自分の公開鍵
/root/.ssh/id_rsa.pub

自身が使用しているグローバルIPを確認
----------------------------------------------------------------------------------------

curl httpbin.org/ip
curl -v httpbin.org/ip
curl inet-ip.info
curl ipinfo.io

ホスト名確認
----------------------------------------------------------------------------------------

uname -n | grep gbs

所属グループ確認
----------------------------------------------------------------------------------------

id

ファイルシステムの検査と修復をお行う
----------------------------------------------------------------------------------------

fsck

ファイル権限について
----------------------------------------------------------------------------------------

ファイル種別，パーミッション，ハード・リンクの数，オーナー名，グループ名，バイト・サイズ，タイム・スタンプ
drwx------   5 nakatani    nakatani    4096 10月  4 17:47 2016 nakatani
drwx------.  5 noga        noga        4096 10月 13 09:46 2015 noga
drwxr-xr-x.  6 root        root        4096  3月 10 12:02 2016 ntjsss
最初の１文字目はファイル種別を表しています。
- ファイル
d ディレクトリ
l シンボリックリンク
2文字目から4文字目はファイルの所有者に対する権限を表し、
5文字目から7文字目はファイルの所有グループに対するを表し、
8文字目から10文字目はその他に対する権限を表しています。

Read=4　読み込み・表示
Write=2　更新・上書き 
eXecute=1　ファイルの実行

ユーザー一覧表示
----------------------------------------------------------------------------------------

cat /etc/passwd

ユーザー名、パスワード、ユーザーID、グループID、コメント（本名とか電話番号とか）ホームディレクトリ、ログインシェル
↓下記のパスワードは暗号化されているか、xというパスワード
pugiemonn:x:500:500::/home/pugiemonn:/bin/bash

ユーザーパスワード表示
----------------------------------------------------------------------------------------

cat /etc/shadow

バックアップファイル作成
----------------------------------------------------------------------------------------

cp -p /etc/fstab /etc/fstab.bak_`date "+%Y%m%d_%H%M%S"`

ユーザー作成時のデフォルトパラメータ
----------------------------------------------------------------------------------------

/etc/default/useradd

ユーザー完全削除
----------------------------------------------------------------------------------------

userdel -r sftpuser

複数ファイルの中から特定の文字列を検索するときのコマンド
----------------------------------------------------------------------------------------

find ./ -type f -print | xargs grep -i '153.231.218.163'

終端ディレクトリまで全て表示
----------------------------------------------------------------------------------------

find ./ -type d -links 2

sedで全文置換
----------------------------------------------------------------------------------------

find ./ -type f -print | xargs sed -i 's/hoge/fuga/g'

findオプション
----------------------------------------------------------------------------------------

find ./ -user admin
find ./ -size +1000k
find ./ -perm 755
find ./ -mtime 2

ポート転送
----------------------------------------------------------------------------------------

任意のサーバーにログイン
ローカルのポート18000 リモート側ホスト172.30.255.2:443

RCS使用方法
----------------------------------------------------------------------------------------

mkdir ./RCS
ci -i -l file

編集用にcheckout
co -l file


チェックイン、ファイルのパーミッションを444にする
ci -u file
チェックイン、ファイルのパーミッションを644にする
ci -l file
差分確認
rcsdiff file

環境変数の表示
----------------------------------------------------------------------------------------

printenv

シェル変数の表示
----------------------------------------------------------------------------------------

set

参照DNSサーバーの場所
----------------------------------------------------------------------------------------

/etc/resolv.conf

rsync
----------------------------------------------------------------------------------------

通常実行
/usr/bin/rsync -haunvz --bwlimit 16384 root@psr-bk2.put:/data/data1/psr/db1/  /data/data1/psr/db1/
バックグラウンド実行
nohup /usr/bin/rsync -haunvz --bwlimit 16384 root@psr-bk2.put:/data/data1/psr/db1/  /data/data1/psr/db1/ &

圧縮と展開
----------------------------------------------------------------------------------------

圧縮
gzip -9v [file name]
展開
gzip -d [file name]


コマンドを定期的に見る
----------------------------------------------------------------------------------------

watch -n 1 "ps aufx | grep gzip"

digコマンド(domain information groperの略で、直訳すると「ドメイン情報の手探りツール」)
----------------------------------------------------------------------------------------

             ⇒ネームサーバに対して問い合わせを行い、その応答結果を表示するコマンド
再帰問い合わせ
dig google.com a @8.8.8.8
非再帰問い合わせ（反復問い合わせ）
dig +norec google.com a @a.dns.jp
出力を答えのみに短くする
dig +short google.com 
hostnameを問い合わせ
dig -x 172.30.101.58

diff別バージョン
----------------------------------------------------------------------------------------

diff -s -y --left-column A B

ファイルが最後に修正されて12日以上のファイルを削除
----------------------------------------------------------------------------------------

/usr/bin/find /tmp/ -type f -name "*" -mtime +12 -exec /bin/rm -fr *

cronのログ
----------------------------------------------------------------------------------------

/var/log/cron

vimページ移動
----------------------------------------------------------------------------------------

コマンド	移動内容
ctrl + u	半画面分 上へ
ctrl + d	半画面分 下へ
ctrl + b	一画面分 上へ
ctrl + f	一画面分 下へ
{	段落毎に上へ
}	段落毎に下へ
gg	そのファイルの先頭へ
G	そのファイルの末尾へ

ファイルの所有者を変更
----------------------------------------------------------------------------------------

chown -R apache. /home/apache/logs/mile_expired_check

lastコマンド
----------------------------------------------------------------------------------------

各ユーザーのログイン履歴確認
last
各ユーザーの最後のログイン確認
lastlog
再起動の履歴確認
last reboot

/var/log/messages
----------------------------------------------------------------------------------------

特定用途以外のログを記録

/var/log/wtmp
----------------------------------------------------------------------------------------

ログイン履歴が記録されているファイル（バイナリファイルなので中身の確認はlessなどで出来ない）

tty
----------------------------------------------------------------------------------------

RS-232Cなどのシリアルインターフェースでコンピューターに接続するコンソール入力装置
現在ではコンソールが用いられることもなくなったが、UNIXの仮想的なキャラクター端末のデバイス名として用いられるなどの形で今も名残をとどめている。

pts
----------------------------------------------------------------------------------------

仮想ターミナル（telnet や SSH 等のターミナルソフトで繋げている状態）

今自分が使っている端末がどれかを表示
----------------------------------------------------------------------------------------

tty

ログイン中の全ユーザーのターミナルにメッセージを表示（ブロードキャスト）
----------------------------------------------------------------------------------------

下記コマンドで入力待ち画面となるので、入力後「Ctrl+D」押下
wall

ログイン中の特定ユーザーのターミナルにメッセージを表示
----------------------------------------------------------------------------------------

1.ログインユーザーを調査
[nakatani@d-stp1 ~]$ w
 09:40:25 up 186 days, 14:35, 140 users,  load average: 0.01, 0.02, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
ymorita  pts/0    172.25.100.139   Mon09    1:12m  0.35s  0.15s ssh -o ServerAliveInterval=60 db36c1.put
yoshitak pts/1    172.25.100.114   Mon14   13:14m  0.19s  0.18s ssh -o ServerAliveInterval=60 psr-web1-2.put

2.ユーザー名をwriteコマンドの次に追記するとメッセージをそのユーザーに送信することが出来る
write ymorita

ログイン中の特定ユーザーのターミナルにメッセージを表示2
----------------------------------------------------------------------------------------

デバイスファイルにメッセージを送信
echo "I love you piyoko" > /dev/pts/1

/dev/pts
----------------------------------------------------------------------------------------

接続しているユーザとやり取りするための窓口となるファイルが置かれるディレクトリ

プロセスをコマンド名でkill
----------------------------------------------------------------------------------------

killall コマンド名
killall firefox

CentOSバージョン確認
----------------------------------------------------------------------------------------

cat /etc/redhat-release

バイナリファイルを閲覧
----------------------------------------------------------------------------------------

strings

スクリプトのデバッグ
----------------------------------------------------------------------------------------

bash -x "スクリプト名"
bash -x /root/scripts/swatchmail.sh

システムコールのデバッグ
----------------------------------------------------------------------------------------

strace -p 1234
strace -c ls /hoge
strace /root/scripts/swatchmail.sh -o /tmp/


vi
----------------------------------------------------------------------------------------

.⇒直前のコマンドを繰り返す
u⇒undo

- リダイレクト
標準出力
＞⇒ファイル書き込み
＞＞⇒ファイル追記

エラー出力
２＞⇒エラーファイル書き込み
２＞＆１⇒エラーと標準出力書き込み

標準入力
＜⇒ファイルの内容をコマンドの入力として渡す

連番ファイル、ディレクトリ一括作成
----------------------------------------------------------------------------------------

mkdir -p test{1..5}
touch test{1..5}/tset.gz


サービス管理
----------------------------------------------------------------------------------------

systemctl
一覧出力
systemctl list-unit-files -t service

systemctl stop postfix.service
systemctl start postfix.service
systemctl restart postfix.service
systemctl status postfix.service
systemctl reload postfix.service
systemctl enable postfix.service
systemctl disable postfix.service

SSHサーバーへのアクセス制限
----------------------------------------------------------------------------------------

/etc/hosts.allow
/etc/hosts.deny

SSHサーバーの設定変更
----------------------------------------------------------------------------------------

/etc/ssh/sshd_config

ネットワーク設定変更
----------------------------------------------------------------------------------------

nmtui

ネットワーク接続状態確認
----------------------------------------------------------------------------------------

nmcli dev status

ネットワークの切断、接続(SSH時はタイピングミスに要注意) 
----------------------------------------------------------------------------------------

nmcli dev disconnect enp0s3; nmcli dev connect enp0s3

grepで行指定
----------------------------------------------------------------------------------------

-A 行数	パターンにマッチした行に続く行を指定した行数だけ表示します。
-B 行数	パターンにマッチした行の前の行を指定した行数だけ表示します。
-C 行数	パターンにマッチした行の前後の行を指定した行数だけ表示します。
-c	パターンにマッチした行の番号のみを表示します。


systemctl(Centos7、今までのserviceコマンドの代わり)
----------------------------------------------------------------------------------------

systemctl start docker		サービス起動
systemctl stop docker		サービス停止
systemctl restart docker	サービス再起動
systemctl reload docker		サービスリロード
systemctl status docker		サービスステータス表示
systemctl status sshd -l	サービスステータス詳細表示
systemctl enable docker		サービス自動起動有効
systemctl disable docker	サービス自動起動無効
systemctl is-enabled docker	サービス自動起動設定確認
systemctl list-unit-files --type=service	サービス一覧

systemd(起動時など)のログを確認
----------------------------------------------------------------------------------------

journalctl
最近のメッセージ表示
journalctl -e
最近のメッセージ表示(詳細も)
journalctl -xe
特定サービスのメッセージだけを表示
journalctl -u sshd
起動時からの全メッセージを表示（-b）
journalctl -b
journalctl -b 2          # 2回前の起動時のログを表示
テイル
journalctl -u
起動メッセージ
journalctl --dmesg

Linuxでログを記録
----------------------------------------------------------------------------------------

script /tmp/scriptlog.log

指定サイズのダミーファイル作成
----------------------------------------------------------------------------------------

・100MBのdummyファイルを作成
fallocate -l 100m dummy
・1GBのdummyファイルを作成
fallocate -l 1g dummy

Centos7でのIP情報の設定など(Network Manager)
----------------------------------------------------------------------------------------

nmtui
もしくは
nmcli
設定後はサービス再起動を行い設定を反映
systemctl restart network

Centos7でのインターフェイス情報確認(ifconfigの代わり)
----------------------------------------------------------------------------------------

ip addr show
ip link
ip -s link
※ifconfigを使いたい場合はnet-toolsをインストール
yum install net-tools

yumコマンド
----------------------------------------------------------------------------------------

yum install
yum remove
yum update
yum search
yum provides
yum clean

Centos7でのルーティング情報確認、設定
----------------------------------------------------------------------------------------

確認
ip route show
スタティックルート設定
ip route add default via 192.168.122.1
ip route add 10.10.20.0/24 via 192.168.50.100 dev eth0
ip route del 10.10.20.0/24

上記コマンドだと再起動時に消去されてしまう。永久に追加する場合は下記
# vi /etc/sysconfig/network-scripts/route-eth0
10.10.20.0/24 via 192.168.50.100 dev eth0


今までのCentosと7のネットワーク環境の違い
----------------------------------------------------------------------------------------

・net-tools	・iproute2
ifconfig	ip a(addr), ip l(link)
route		ip r(route)
netstat		ss -tan
netstat -i	ip -s l(link)
arp			ip n(neighbor)

ハードウェア情報取得(HW)
----------------------------------------------------------------------------------------

dmidecode

タブ保管プログラム、コマンド
----------------------------------------------------------------------------------------

compgen -c | sort | uniq | wc -l

rpm(レッドハットパッケージマネージャ)
----------------------------------------------------------------------------------------

rpm -qa

grepで前後検索
----------------------------------------------------------------------------------------

grep -B 3(前の行検索)
grep -A 3(後の行検索)

ARPテーブルの確認、無効化
----------------------------------------------------------------------------------------

確認
ip n
無効化
ip n flush 192.168.122.71 dev eth0
ip n del 192.168.122.71 dev eth0 (←エントリーを削除)

Centos7でのfirewalld(iptables)
----------------------------------------------------------------------------------------

ゾーン情報確認
firewall-cmd --list-all-zones
デフォルトゾーンの確認
firewall-cmd --get-default-zone
デフォルトゾーンの変更
firewall-cmd --set-default-zone=external
ゾーンのインターフェイスを付け替える
firewall-cmd --zone=trusted --change-interface=ens33

定義されているサービス一覧
firewall-cmd --get-services
publicのサービス確認
firewall-cmd --list-service --zone=public 

サービスを追加する
firewall-cmd --add-service=http --zone=public
恒久的にサービスを追加する
firewall-cmd --add-service=http --zone=public --permanent
サービスを削除する
firewall-cmd --remove-service=dhcpv6-client --zone=public
ICMPタイプの一覧表示
firewall-cmd --get-icmptypes
禁止されているICMPタイプを表示
firewall-cmd --list-icmp-blocks --zone=public
禁止されているICMPタイプに追加
firewall-cmd --add-icmp-block=echo-request --zone=public
恒久的に禁止されているICMPタイプに追加 
firewall-cmd --add-icmp-block=echo-request --zone=public --permanent
禁止されるICMPタイプから削除
firewall-cmd --remove-icmp-block=echo-request
恒久的に禁止されるICMPタイプから削除 
firewall-cmd --remove-icmp-block=echo-request --permanent

再起動
firewall-cmd --reload
GUIツール
firewall-config

Centos7でのプロセスkill
----------------------------------------------------------------------------------------

systemctl kill -s 9 unit_name

Centos7でのホスト名変更
----------------------------------------------------------------------------------------

hostnamectl set-hostname new_host_name

パスワードの有効期限変更
----------------------------------------------------------------------------------------

karumaのパスワードの変更が可能な最小日数を3日にし、パスワードの有効日時を100日にする
chage -m 3 -M 100 karuma

パスワードの有効期限情報の確認
chage -l karuma

Centosログローテーション
----------------------------------------------------------------------------------------

設定ファイル
/etc/logrotate.conf
インクルードファイル
/etc/logrotate.d
ログローテートCron
/etc/cron.daily/logrotate

ユーザー定義ファイル
----------------------------------------------------------------------------------------

/etc/passwd

グループ定義ファイル
----------------------------------------------------------------------------------------

/etc/group

ユーザー作成等
----------------------------------------------------------------------------------------

追加
useradd
変更
usermod
削除
userdel
ログイン用パスワード
passwd

ユーザーIDを指定してuseraddする
useradd -g users -u 1001 penguin
-g グループを指定
-u ユーザーIDを指定(指定しない場合は自動振り分け)

既存ユーザーをグループに追加
usermod -aG GROUPS USER


グループ作成等
----------------------------------------------------------------------------------------

グループIDが100のhoge-groupを作成
groupadd -g 100 hoge-group
グループ削除
groupdel hoge-group

シャドウファイル
----------------------------------------------------------------------------------------

暗号化されたユーザーパスワードのファイル
ユーザー
/etc/shadow
グループ
/etc/gshadow

ユーザーの情報確認
----------------------------------------------------------------------------------------

id

標準出力とエラー出力の両方をファイルに書き出す
----------------------------------------------------------------------------------------

cat abc xxx > nnn 2>&1

sudoersファイルの設定
----------------------------------------------------------------------------------------

visudo
sudoの許可(wheelグループの許可)
↓下記のコメントアウトを削除、"%wheel"をユーザー名に変更
%wheel ALL=(ALL) ALL

インストール時に前回と同じ./configure設定を使用する。
----------------------------------------------------------------------------------------

スクリプトの為、そのまま利用できる。ファイルはソースツリーの上にある。
/usr/local/src/httpd-2.4.16/config.nice
make
make install

mountコマンド
----------------------------------------------------------------------------------------

mountコマンド単体で実行することにより、現在のファイルシステムのマウント状態が確認できる

ファイルシステムの情報確認
----------------------------------------------------------------------------------------

/etc/fstab

i386
----------------------------------------------------------------------------------------

Intelの32ビットプロセッサ

yumとrpmの違い
----------------------------------------------------------------------------------------

基本的に yum を使って、yum が使えないところを rpm で補う
・rpm と yum は別々のものではない。yum は内部で rpm を呼び出して、rpm よりもさらに高度な機能を提供しているもの
・yum のほうが rpm よりも高機能なので、yum が使える場面では yum を使ったほうが便利。rpm は yum が使えない場面で使う

空きメモリ、Swap容量の確認
----------------------------------------------------------------------------------------

free

ファイルのタイムスタンプを変更、ファイルを新規作成
----------------------------------------------------------------------------------------

任意の日時を指定
touch -d 201704132200 hoge.txt

シェルスクリプトのデバッグ
----------------------------------------------------------------------------------------

sh -xv test.sh

findコマンド詳細(ファイル検索)
----------------------------------------------------------------------------------------

/ルート配下のファイルを全検索(エラーは捨てる)
find / -name hoge -type f 2>/dev/null

大文字小文字を区別しない
find /home -iname hoge

ディレクトリを検索
find /home -type d

ファイルを検索
find /home -type f

シンボリックリンクを検索
find /home -type l

1日以上前に変更されたファイルを検索
find /home -mtime +1

1日以上前にアクセスされたファイルを検索
find /home -atime +1

1日以上前にファイルステータスが変更されたファイルを検索
find /home -ctime +1

検索結果に対して別のコマンドを実行
find /home -exec 実行コマンド {} \;

find /home -exec rm -rf {} \;

treeコマンドが無い時の擬似tree
----------------------------------------------------------------------------------------

pwd;find . | sort | sed '1d;s,[^/]*/,|    ,g;s/..//;s/[^ ]*$/|-- &/'

標準入力から受取り、標準出力に書き出す。その際にフィルタの役割も果たす(データ編集)
----------------------------------------------------------------------------------------

文字列置換(1行に複数文字列がある場合、最初の一箇所しか置換しない)
cat samplefile | sed -e "s/OldText/NewText/"
sed -e "s/OldText/NewText/" samplefile

文字列すべて置換
cat samplefile | sed -e "s/OldText/NewText/g"
sed -e "s/OldText/NewText/g" samplefile

指定の行のみ標準出力(2行目のみ)
sed -n '2p' < samplefile

文字列の削除
sed -e "s/TextToRemove//g"

行頭の文字列を削除
sed -e "s/^TextToRemove//"

行末の文字列を削除
sed -e "s/TextToRemove\$//"

行頭の三文字をすべて削除
sed -e "s/^...//"

行の全てをabcdという文字に置き換え
sed -e "s/.*/abcd/"

Pattern文字列以降を削除
sed -e "s/Pattern.*//"

sedのデリミタ(区切り文字)はなんでもOK。下記はすべて同じ
sed -e "s/abc/def/g"
sed -e "s%abc%def%g"
sed -e "s.abc.def.g"

sedの特殊文字
ドット【.】は任意の一文字を表す
アスタリスク【*】は直前の文字が任意の個数連続した場合を表す(0個も含む)
